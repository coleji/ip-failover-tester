name: CI
on:
  push:
    branches: 
      - master
      - release/*
      - dev/*
      - cluster/*
    tags:
      - '*'
  pull_request:
    branches: 
      - master
      - release/*
      - dev/*
      - cluster/*
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: install
        run: npm install
      - name: tar
        run: tar -zcf build.tar.gz src node_modules package.json Dockerfile
      - name: save artifact
        uses: actions/upload-artifact@v2
        with:
          name: build.tar.gz
          path: build.tar.gz
  image:
    runs-on: ubuntu-20.04
    needs: build
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v2
      - name: Fetch artifact
        uses: actions/download-artifact@v2
        with:
          name: build.tar.gz
      - name: unpack
        run: tar -zxvf build.tar.gz && ls -l
      - name: set docker env (branch non PR)
        if: github.ref_type == 'branch' && github.event_name != 'pull_request'
        shell: bash
        run: |
          echo "REF_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / _)" >> $GITHUB_ENV
      - name: set docker env (branch PR)
        if: github.ref_type == 'branch' && github.event_name == 'pull_request'
        shell: bash
        run: |
          echo "REF_NAME=$(echo ${GITHUB_HEAD_REF} | tr / _)" >> $GITHUB_ENV
      - name: set docker env (tag)
        if: github.ref_type == 'tag'
        shell: bash
        run: |
          echo "REF_NAME=$(echo ${GITHUB_REF#refs/tags/} | tr / _ | sed 's/^v//g')" >> $GITHUB_ENV
      - name: docker login
        run: docker login -u coleji -p ${{ secrets.DOCKER_PASSWORD }}
      - name: build image
        run: docker build -t coleji/ip-failover-tester:${{ env.REF_NAME }} .
      - name: push image
        run: docker push coleji/ip-failover-tester:${{ env.REF_NAME }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
